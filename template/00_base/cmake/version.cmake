set(@OPTION_PROJECT_PREFIX_UPPER_CASE@_VERSION_MAJOR_MINOR "0.1")
set(@OPTION_PROJECT_PREFIX_UPPER_CASE@_VERSION_PATCH "0")

find_package(Git QUIET)
if(Git_FOUND)
	execute_process(
		COMMAND git describe --tags --long --always
		OUTPUT_VARIABLE GIT_DESCRIBE
		OUTPUT_STRIP_TRAILING_WHITESPACE
	)

	if("${GIT_DESCRIBE}" MATCHES "^([0-9]+\\.[0-9]+)-([0-9]+)-g[0-9a-f]+$")
		set(@OPTION_PROJECT_PREFIX_UPPER_CASE@_VERSION_MAJOR_MINOR "${CMAKE_MATCH_1}")
		set(@OPTION_PROJECT_PREFIX_UPPER_CASE@_VERSION_PATCH "${CMAKE_MATCH_2}")
	else()
		message(WARNING "Invalid Tag format. ${GIT_DESCRIBE}.")
	endif()
else()
	message(WARNING "Git not found.")
endif()

set(@OPTION_PROJECT_PREFIX_UPPER_CASE@_VERSION 
		${@OPTION_PROJECT_PREFIX_UPPER_CASE@_VERSION_MAJOR_MINOR}.${@OPTION_PROJECT_PREFIX_UPPER_CASE@_VERSION_PATCH})